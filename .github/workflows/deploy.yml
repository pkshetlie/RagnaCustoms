name: Deploy Symfony Application

# Déclencher l'exécution du workflow sur un push dans la branche principale
#on:
#    push:
#        branches:
#            - master
#            - beta

jobs:
#    test:
#        name: Run Tests
#        runs-on: ubuntu-latest
#        steps:
#            -   name: Checkout repository
#                uses: actions/checkout@v3
#
#            -   name: Setup PHP
#                uses: shivammathur/setup-php@v2
#                with:
#                    php-version: '8.2'
#                    extensions: curl, mbstring, xml, zip
#                    ini-values: post_max_size=100M, memory_limit=512M
#                    coverage: none
#
#            -   name: Install Composer Dependencies
#                run: composer install --optimize-autoloader
#
#            -   name: Run PHPUnit tests
#                run: php bin/phpunit

    deploy-production:
        name: Deploy to Prod
#        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Set up Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: '20'

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.2'
                    extensions: curl, mbstring, xml, zip
                    ini-values: post_max_size=100M, memory_limit=512M
                    coverage: none

            -   name: Install Composer Dependencies
                run: composer install --optimize-autoloader

            -   name: Install Node Dependencies and Build
                run: |
                    npm install --legacy-peer-deps
                    npm run build 

            -   name: Deploy via SSH
                uses: appleboy/ssh-action@v0.1.9
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USER }}
                    key: ${{ secrets.SSH_PRIVATE_KEY }}
                    port: 22
                    script: |
                        cd /var/www/html/ragnacustoms.com/www
                        chown -R deployuser:www-data /var/www/html/ragnacustoms.com/www
                        chmod -R g+rw /var/www/html/ragnacustoms.com/www/var
                        git stash                 
                        git pull origin master                 
                        composer update --no-dev --optimize-autoloader

            -   name: Créer le répertoire SSH et ajouter la clé hôte
                env:
                    SERVER_IP: ${{ secrets.SSH_HOST }}
                run: |
                    mkdir -p ~/.ssh
                    chmod 700 ~/.ssh
                    ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
                    chmod 644 ~/.ssh/known_hosts

            -   name: Setup SSH
                uses: webfactory/ssh-agent@v0.5.3
                with:
                    ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            -   name: Deploy the built files to the server
                env:
                    SERVER_IP: ${{ secrets.SSH_HOST }}
                run: |
                    rsync -avz --delete public/build/ deployuser@$SERVER_IP:/var/www/html/ragnacustoms.com/www/public/build

            -   name: Deploy via SSH
                uses: appleboy/ssh-action@v0.1.9
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USER }}
                    key: ${{ secrets.SSH_PRIVATE_KEY }}
                    port: 22
                    script: |
                        cd /var/www/html/ragnacustoms.com/www
                        php bin/console cache:clear --env=prod
                        php bin/console cache:warmup --env=prod
                        php bin/console doctrine:migrations:migrate --no-interaction

    deploy-beta:
        name: Deploy to Beta
#        needs: test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/beta' # Exécuter uniquement pour la branche beta

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Set up Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: '20'

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.2'
                    extensions: curl, mbstring, xml, zip
                    ini-values: post_max_size=100M, memory_limit=512M
                    coverage: none

            -   name: Install Composer Dependencies
                run: composer install --optimize-autoloader

            -   name: Install Node Dependencies and Build
                run: |
                    npm install --legacy-peer-deps
                    npm run build 

            -   name: Deploy via SSH
                uses: appleboy/ssh-action@v0.1.9
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USER }}
                    key: ${{ secrets.SSH_PRIVATE_KEY }}
                    port: 22
                    script: |
                        cd /var/www/html/ragnacustoms.com/beta
                        git pull origin beta                 
                        composer update --no-dev --optimize-autoloader

            -   name: Créer le répertoire SSH et ajouter la clé hôte
                env:
                    SERVER_IP: ${{ secrets.SSH_HOST }}
                run: |
                    mkdir -p ~/.ssh
                    chmod 700 ~/.ssh
                    ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
                    chmod 644 ~/.ssh/known_hosts

            -   name: Setup SSH
                uses: webfactory/ssh-agent@v0.5.3
                with:
                    ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            -   name: Deploy the built files to the server
                env:
                    SERVER_IP: ${{ secrets.SSH_HOST }}
                run: |
                    rsync -avz --delete public/build/ deployuser@$SERVER_IP:/var/www/html/ragnacustoms.com/beta/public/build

            -   name: Deploy via SSH
                uses: appleboy/ssh-action@v0.1.9
                with:
                    host: ${{ secrets.SSH_HOST }}
                    username: ${{ secrets.SSH_USER }}
                    key: ${{ secrets.SSH_PRIVATE_KEY }}
                    port: 22
                    script: |
                        cd /var/www/html/ragnacustoms.com/beta
                        php bin/console cache:clear --env=prod
                        php bin/console cache:warmup --env=prod
                        php bin/console doctrine:migrations:migrate --no-interaction
